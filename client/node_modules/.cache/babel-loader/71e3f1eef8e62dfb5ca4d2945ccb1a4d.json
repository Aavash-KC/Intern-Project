{"ast":null,"code":"var _jsxFileName = \"E:\\\\Intern Project\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-template-curly-in-string */\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport Dashboard from './components/pages/Dashboard';\nimport Portfolio from './components/pages/Portfolio';\nimport Navbar from './components/layouts/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [stockName, setStockName] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [amount, setAmount] = useState('');\n  const [transactionDate, setTransactionDate] = useState('');\n  const [portfolio, setPortfolio] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:9000/api/get\").then(Response => {\n      setPortfolio(Response.data);\n    });\n  });\n\n  const addPortfolio = () => {\n    Axios.post(\"http://localhost:9000/api/save\", {\n      stockName: stockName,\n      transactionType: transactionType,\n      quantity: quantity,\n      amount: amount,\n      transactionDate: transactionDate\n    }).then(() => {\n      alert('success');\n      reloadPage();\n    });\n  };\n\n  const deletePortfolio = SN => {\n    Axios.delete('http://localhost:9000/api/delete/' + {\n      SN\n    }).then(() => {\n      reloadPage();\n    });\n  };\n\n  function reloadPage() {\n    window.location.reload();\n  }\n\n  const renderportfolio = (portfolio, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.SN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.StockName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.TransactionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.Quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.Amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: portfolio.TransactionDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePortfolio(portfolio.SN),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/portfolios\",\n          component: Portfolio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)\n  /*\n        <h1>Portfolio Management</h1>\n        <label>Stock Name : </label>\n        <input type=\"text\" name=\"stockName\" onChange={(e) => {\n          setStockName(e.target.value)\n        }} /><br />\n        <label>Transaction Type : </label>\n        <select name=\"transactionType\" onChange={(e) => {\n          setTransactionType(e.target.value)\n        }}>\n          <option value=\"\" disabled selected=\"true\" >choose here</option>\n          <option value=\"buy\">Buy</option>\n          <option value=\"sell\">Sell</option>\n        </select><br />\n        <label>Quantity : </label>\n        <input type=\"number\" name=\"quantity\" onChange={(e) => {\n          setQuantity(e.target.value)\n        }} /><br />\n        <label>Amount : </label>\n        <input type=\"number\" name=\"amount\" onChange={(e) => {\n          setAmount(e.target.value)\n        }} /><br />\n        <label>Transaction Date : </label>\n        <input type=\"date\" name=\"transactionDate\" min=\"2015-01-01\" max=\"2025-12-31\" onChange={(e) => {\n          setTransactionDate(e.target.value)\n        }} /><br />\n  \n        <button onClick={addPortfolio}>Save</button>\n  \n        <table>\n          <thead>\n            <tr>\n              <th>S.N.</th>\n              <th>Stock Name</th>\n              <th>Transaction Type</th>\n              <th>Quantity</th>\n              <th>Amount</th>\n              <th>Transaction Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {portfolio.map(renderportfolio)}\n          </tbody>\n        </table>\n      </div >*/\n  ;\n}\n\n_s(App, \"QqDMEoj0TeBUHaLKkDJAyIh738U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Intern Project/client/src/App.js"],"names":["React","useState","useEffect","Axios","ReactBootstrap","Dashboard","Portfolio","Navbar","BrowserRouter","Router","Route","Switch","App","stockName","setStockName","transactionType","setTransactionType","quantity","setQuantity","amount","setAmount","transactionDate","setTransactionDate","portfolio","setPortfolio","get","then","Response","data","addPortfolio","post","alert","reloadPage","deletePortfolio","SN","delete","window","location","reload","renderportfolio","index","StockName","TransactionType","Quantity","Amount","TransactionDate"],"mappings":"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","sourcesContent":["/* eslint-disable no-template-curly-in-string */\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport Dashboard from './components/pages/Dashboard';\nimport Portfolio from './components/pages/Portfolio';\nimport Navbar from './components/layouts/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n\n  const [stockName, setStockName] = useState('')\n  const [transactionType, setTransactionType] = useState('')\n  const [quantity, setQuantity] = useState('')\n  const [amount, setAmount] = useState('')\n  const [transactionDate, setTransactionDate] = useState('')\n\n  const [portfolio, setPortfolio] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:9000/api/get\").then((Response) => {\n      setPortfolio(Response.data)\n    });\n  });\n\n\n  const addPortfolio = () => {\n    Axios.post(\"http://localhost:9000/api/save\", {\n      stockName: stockName, transactionType: transactionType,\n      quantity: quantity, amount: amount, transactionDate: transactionDate\n    }).then(() => {\n      alert('success');\n      reloadPage();\n    });\n  };\n\n  const deletePortfolio = (SN) => {\n    Axios.delete('http://localhost:9000/api/delete/' + { SN }).then(() => {\n      reloadPage();\n    });\n\n  }\n\n  function reloadPage() {\n    window.location.reload();\n  }\n\n  const renderportfolio = (portfolio, index) => {\n    return (\n\n      <tr key={index}>\n        <td>{portfolio.SN}</td>\n        <td>{portfolio.StockName}</td>\n        <td>{portfolio.TransactionType}</td>\n        <td>{portfolio.Quantity}</td>\n        <td>{portfolio.Amount}</td>\n        <td>{portfolio.TransactionDate}</td>\n        <td><button>Edit</button><button onClick={() => deletePortfolio(portfolio.SN)}>Delete</button></td>\n      </tr>\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component = {Dashboard}/>\n          <Route exact path=\"/portfolios\" component={Portfolio}/>\n        </Switch> \n      </div>\n    </Router>\n\n/*\n      <h1>Portfolio Management</h1>\n      <label>Stock Name : </label>\n      <input type=\"text\" name=\"stockName\" onChange={(e) => {\n        setStockName(e.target.value)\n      }} /><br />\n      <label>Transaction Type : </label>\n      <select name=\"transactionType\" onChange={(e) => {\n        setTransactionType(e.target.value)\n      }}>\n        <option value=\"\" disabled selected=\"true\" >choose here</option>\n        <option value=\"buy\">Buy</option>\n        <option value=\"sell\">Sell</option>\n      </select><br />\n      <label>Quantity : </label>\n      <input type=\"number\" name=\"quantity\" onChange={(e) => {\n        setQuantity(e.target.value)\n      }} /><br />\n      <label>Amount : </label>\n      <input type=\"number\" name=\"amount\" onChange={(e) => {\n        setAmount(e.target.value)\n      }} /><br />\n      <label>Transaction Date : </label>\n      <input type=\"date\" name=\"transactionDate\" min=\"2015-01-01\" max=\"2025-12-31\" onChange={(e) => {\n        setTransactionDate(e.target.value)\n      }} /><br />\n\n      <button onClick={addPortfolio}>Save</button>\n\n      <table>\n        <thead>\n          <tr>\n            <th>S.N.</th>\n            <th>Stock Name</th>\n            <th>Transaction Type</th>\n            <th>Quantity</th>\n            <th>Amount</th>\n            <th>Transaction Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {portfolio.map(renderportfolio)}\n        </tbody>\n      </table>\n    </div >*/\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}